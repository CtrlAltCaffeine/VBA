function downloadAttachmentsFromSendersWithSubject() {
  var senders = ["rakesh@example.com", "john@example.com", "mary@example.com"];
  var subjectKeyword = "test";
  var threads = [];

  for (var i = 0; i < senders.length; i++) {
    var sender = senders[i];
    var senderThreads = GmailApp.search('from:' + sender + ' is:unread subject:' + subjectKeyword);
    threads = threads.concat(senderThreads);
  }

  for (var i = 0; i < threads.length; i++) {
    var messages = threads[i].getMessages();

    for (var j = 0; j < messages.length; j++) {
      var email = messages[j];
      var attachments = email.getAttachments();

      if (attachments.length === 0) {
        var body = email.getBody();
        var urls = extractUrlsFromBody(body);

        for (var k = 0; k < urls.length; k++) {
          var url = urls[k];
          downloadFileFromUrl(url);
        }
      }

      email.markRead();
    }
  }
}

function extractUrlsFromBody(body) {
  var urls = [];
  var regex = /https?:\/\/[^\s]+/g;
  var matches = body.match(regex);

  if (matches) {
    urls = matches.filter(function (url) {
      return true;
    });
  }

  return urls;
}

function downloadFileFromUrl(url) {
  try {
    var options = {
      followRedirects: true,
      headers: {
        "User-Agent": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)"
      }
    };

    var response = UrlFetchApp.fetch(url, options);

    Logger.log("Fetched URL: " + url);

    if (response.getResponseCode() === 200) {
      var fileBlob = response.getBlob();
      var contentType = response.getHeaders()["Content-Type"];
      var extension = getExtensionFromContentType(contentType);

      if (!extension) {
        extension = "dat";
      }

      var fileName = "downloaded_file." + extension;

      var folder = DriveApp.getRootFolder();
      folder.createFile(fileBlob.setName(fileName));
    } else {
      Logger.log("Failed to download file from URL: " + url + " - Response code: " + response.getResponseCode());
    }
  } catch (error) {
    Logger.log("Error while downloading file from URL: " + url + " - " + error.toString());
  }
}

function getExtensionFromContentType(contentType) {
  var contentTypeMappings = {
    "application/pdf": "pdf",
    "image/jpeg": "jpg",
    "image/png": "png",
  };

  return contentTypeMappings[contentType] || "";
}

function downloadFileFromUrl(url) {
  try {
    var options = {
      followRedirects: true,
      headers: {
        "User-Agent": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)"
      }
    };

    var response = UrlFetchApp.fetch(url, options);

    Logger.log("Fetched URL: " + url);

    if (response.getResponseCode() === 200) {
      // No need to download the file for now
      // We will only print the fetched URL
    } else {
      Logger.log("Failed to fetch URL: " + url + " - Response code: " + response.getResponseCode());
    }
  } catch (error) {
    Logger.log("Error while fetching URL: " + url + " - " + error.toString());
  }
}


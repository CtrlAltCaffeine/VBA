Sub ImportAndAnalyzeNifty50Data()
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets("Nifty50Data")
    
    ' Clear existing data
    ws.Cells.Clear
    
    ' Import CSV data
    With ws.QueryTables.Add(Connection:="TEXT;nifty_50_data.csv", Destination:=ws.Range("A1"))
        .TextFileParseType = xlDelimited
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = True
        .TextFilePlatform = xlWindows
        .Refresh BackgroundQuery:=False
    End With
    
    ' Calculate average closing price for each stock
    Dim lastRow As Long
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    
    Dim stockSymbols As Collection
    Set stockSymbols = New Collection
    
    Dim i As Long
    For i = 2 To lastRow
        On Error Resume Next
        stockSymbols.Add ws.Cells(i, 1).Value, CStr(ws.Cells(i, 1).Value)
        On Error GoTo 0
    Next i
    
    Dim stock As Variant
    Dim startRow As Long
    Dim endRow As Long
    Dim totalClose As Double
    Dim count As Long
    Dim avgClose As Double
    Dim outputRow As Long
    outputRow = 2
    
    ws.Cells(1, "G").Value = "Stock Symbol"
    ws.Cells(1, "H").Value = "Average Closing Price"
    
    For Each stock In stockSymbols
        startRow = Application.WorksheetFunction.Match(stock, ws.Columns("A"), 0)
        endRow = Application.WorksheetFunction.Match(stock & ".99999999999", ws.Columns("A"), 1) - 1
        
        totalClose = Application.WorksheetFunction.Sum(ws.Range("F" & startRow & ":F" & endRow))
        count = endRow - startRow + 1
        avgClose = totalClose / count
        
        ws.Cells(outputRow, "G").Value = stock
        ws.Cells(outputRow, "H").Value = avgClose
        
        outputRow = outputRow + 1
    Next stock
    
    MsgBox "Data import and analysis complete!", vbInformation
End Sub

import xml.etree.ElementTree as ET
import pandas as pd

tree = ET.parse('your_file.xml')
root = tree.getroot()
cycle = root.find('.//cycle')
date = cycle.get('date')
code = cycle.get('code')
data = []
for margin in cycle.findall('.//margin'):
    entry = {
        'date': date,
        'code': code,
        'clrmbrfirmid': margin.get('clrmbrfirmid', ''),
        'pbAcctId': margin.get('pbAcctId', ''),
        'init': margin.get('init', ''),
        'maint': margin.get('maint', ''),
        'portfoliofutCurrAmt': margin.get('portfoliofutCurrAmt', ''),
        'futPreAmt': margin.get('futPreAmt', ''),
        'futPostAmt': margin.get('futPostAmt', ''),
        'otcCurrAmt': margin.get('otcCurrAmt', ''),
        'otcPreAmt': margin.get('otcPreAmt', ''),
        'otcPostAmt': margin.get('otcPostAmt', ''),
        'diffAmt': margin.get('diffAmt', ''),
        'futNovCurrAmt': margin.get('futNovCurrAmt', ''),
        'futNovPreAmt': margin.get('futNovPreAmt', ''),
        'futNovPostAmt': margin.get('futNovPostAmt', ''),
        'otcNovCurrAmt': margin.get('otcNovCurrAmt', ''),
        'otcNovPreAmt': margin.get('otcNovPreAmt', ''),
        'otcNovPostAmt': margin.get('otcNovPostAmt', ''),
        'totalPreAmt': margin.get('totalPreAmt', ''),
        'totalPostAmt': margin.get('totalPostAmt', ''),
        'diffPct': margin.get('diffPct', '')
    }
    data.append(entry)

df = pd.DataFrame(data)
print(df)

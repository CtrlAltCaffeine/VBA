Sub ImportAndAnalyzeNifty50Data()
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets("Nifty50Data")
    
    ' Clear existing data
    ws.Cells.Clear
    
    ' Import CSV data
    With ws.QueryTables.Add(Connection:="TEXT;nifty_50_data.csv", Destination:=ws.Range("A1"))
        .TextFileParseType = xlDelimited
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = True
        .TextFilePlatform = xlWindows
        .Refresh BackgroundQuery:=False
    End With
    
    ' Calculate average closing price for each stock
    Dim lastRow As Long
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    
    Dim stockSymbols As Collection
    Set stockSymbols = New Collection
    
    Dim i As Long
    For i = 2 To lastRow
        On Error Resume Next
        stockSymbols.Add ws.Cells(i, 1).Value, CStr(ws.Cells(i, 1).Value)
        On Error GoTo 0
    Next i
    
    Dim stock As Variant
    Dim startRow As Long
    Dim endRow As Long
    Dim totalClose As Double
    Dim count As Long
    Dim avgClose As Double
    Dim outputRow As Long
    outputRow = 2
    
    ws.Cells(1, "G").Value = "Stock Symbol"
    ws.Cells(1, "H").Value = "Average Closing Price"
    
    For Each stock In stockSymbols
        startRow = Application.WorksheetFunction.Match(stock, ws.Columns("A"), 0)
        endRow = Application.WorksheetFunction.Match(stock & ".99999999999", ws.Columns("A"), 1) - 1
        
        totalClose = Application.WorksheetFunction.Sum(ws.Range("F" & startRow & ":F" & endRow))
        count = endRow - startRow + 1
        avgClose = totalClose / count
        
        ws.Cells(outputRow, "G").Value = stock
        ws.Cells(outputRow, "H").Value = avgClose
        
        outputRow = outputRow + 1
    Next stock
    
    MsgBox "Data import and analysis complete!", vbInformation
End Sub

function processEmailsForAbcLabel() {
  const LABEL_NAME = "abc";
  const TARGET_CC_EMAIL = "jeevan@gmail.com".toLowerCase();
  const SEARCH_TERM_BODY = "abc";

  try {
    let label = GmailApp.getUserLabelByName(LABEL_NAME);
    if (!label) label = GmailApp.createLabel(LABEL_NAME);

    const threads = GmailApp.search('is:inbox', 0, 20);

    for (let i = 0; i < threads.length; i++) {
      const thread = threads[i];
      const messages = thread.getMessages();

      for (let j = 0; j < messages.length; j++) {
        const message = messages[j];
        if (message.getLabels().some(l => l.getName() === LABEL_NAME)) continue;

        const body = message.getPlainBody().toLowerCase();
        const ccArray = message.getCc().toLowerCase().split(',').map(s => s.trim());

        if (body.includes(SEARCH_TERM_BODY) && ccArray.includes(TARGET_CC_EMAIL)) {
          message.addLabel(label);
        }
      }
    }
  } catch (e) {
    Logger.log(`Error: ${e.toString()}`);
    Logger.log(`Stack: ${e.stack}`);
  }
}

function runProcessing() {
  processEmailsForAbcLabel();
}

Sub CalculateAverage()
    Dim rng As Range
    Dim cell As Range
    Dim total As Double
    Dim count As Integer
    Dim average As Double
    
    ' Set the range to calculate average
    Set rng = Range("A1:A10")
    
    ' Initialize variables
    total = 0
    count = 0
    
    ' Loop through each cell in the range
    For Each cell In rng
        ' Check if the cell is not empty
        If Not IsEmpty(cell) Then
            ' Increment the count
            count = count + 1
            
            ' Add the cell value to the total
            total = total + cell.Value
        End If
    Next cell
    
    ' Calculate the average
    If count > 0 Then
        average = total / count
    Else
        average = 0
    End If
    
    ' Display the average
    MsgBox "The average is: " & average
End Sub

Sub SortData()
    Dim rng As Range
    Dim lastRow As Long
    
    ' Set the range to sort
    Set rng = Range("A1:B10")
    
    ' Get the last row in the range
    lastRow = rng.Rows.Count + rng.Row - 1
    
    ' Sort the range in ascending order based on column A
    rng.Sort Key1:=Range("A1:A" & lastRow), _
              Order1:=xlAscending, _
              Header:=xlYes
    
    ' Display a message
    MsgBox "Data sorted successfully!"
End Sub

Sub CopyData()
    Dim sourceRange As Range
    Dim destinationRange As Range
    
    ' Set the source range
    Set sourceRange = Range("A1:A10")
    
    ' Set the destination range
    Set destinationRange = Range("B1")
    
    ' Copy the data from source to destination
    sourceRange.Copy Destination:=destinationRange
    
    ' Display a message
    MsgBox "Data copied successfully!"
End Sub

' ... Add more procedures or functions here ...

Sub Main()
    ' Call the procedures
    CalculateAverage
    SortData
    CopyData
    
    ' ... Call more procedures or functions here ...
    
    MsgBox "All tasks completed!"
End Sub

function downloadFileFromHyperlink() {
  var sender = "rakesh@example.com"; // Replace with the sender's email address
  var threads = GmailApp.search('from:' + sender + ' is:unread');

  for (var i = 0; i < threads.length; i++) {
    var messages = threads[i].getMessages();

    for (var j = 0; j < messages.length; j++) {
      var email = messages[j];
      var attachments = email.getAttachments();

      if (attachments.length === 0) {
        // If there are no attachments, parse the email body for hyperlinks
        var body = email.getBody();
        var urls = extractUrlsFromBody(body);

        for (var k = 0; k < urls.length; k++) {
          var url = urls[k];
          downloadFileFromUrl(url);
        }
      }

      // Mark the email as read
      email.markRead();
    }
  }
}

function extractUrlsFromBody(body) {
  var urls = [];
  var regex = /https?:\/\/[^\s]+/g;
  var matches = body.match(regex);

  if (matches) {
    urls = matches.filter(function (url) {
      // Add any additional filtering if needed
      return true;
    });
  }

  return urls;
}

function downloadFileFromUrl(url) {
  var response = UrlFetchApp.fetch(url);
  var fileBlob = response.getBlob();

  // Modify the filename as needed, or get it from the response headers
  var fileName = "downloaded_file.txt";

  // Save the downloaded file to Google Drive
  var folder = DriveApp.getRootFolder(); // Change to your desired folder
  folder.createFile(fileBlob.setName(fileName));

  Logger.log("Downloaded file from URL: " + url);
}

Sub ImportAndAnalyzeNifty50Data()
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets("Nifty50Data")
    
    ' Clear existing data
    ws.Cells.Clear
    
    ' Import CSV data
    With ws.QueryTables.Add(Connection:="TEXT;nifty_50_data.csv", Destination:=ws.Range("A1"))
        .TextFileParseType = xlDelimited
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = True
        .TextFilePlatform = xlWindows
        .Refresh BackgroundQuery:=False
    End With
    
    ' Calculate average closing price for each stock
    Dim lastRow As Long
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    
    Dim stockSymbols As Collection
    Set stockSymbols = New Collection
    
    Dim i As Long
    For i = 2 To lastRow
        On Error Resume Next
        stockSymbols.Add ws.Cells(i, 1).Value, CStr(ws.Cells(i, 1).Value)
        On Error GoTo 0
    Next i
    
    Dim stock As Variant
    Dim startRow As Long
    Dim endRow As Long
    Dim totalClose As Double
    Dim count As Long
    Dim avgClose As Double
    Dim outputRow As Long
    outputRow = 2
    
    ws.Cells(1, "G").Value = "Stock Symbol"
    ws.Cells(1, "H").Value = "Average Closing Price"
    
    For Each stock In stockSymbols
        startRow = Application.WorksheetFunction.Match(stock, ws.Columns("A"), 0)
        endRow = Application.WorksheetFunction.Match(stock & ".99999999999", ws.Columns("A"), 1) - 1
        
        totalClose = Application.WorksheetFunction.Sum(ws.Range("F" & startRow & ":F" & endRow))
        count = endRow - startRow + 1
        avgClose = totalClose / count
        
        ws.Cells(outputRow, "G").Value = stock
        ws.Cells(outputRow, "H").Value = avgClose
        
        outputRow = outputRow + 1
    Next stock
    
    MsgBox "Data import and analysis complete!", vbInformation
End Sub

import pandas as pd

df1 = pd.DataFrame({
    'key': ['A', 'B', 'C', 'D']
})

df2 = pd.DataFrame({
    'key1': ['A', 'B', 'E'],
    'key2': ['C', 'D', 'F'],
    'key3': ['G', 'H', 'I'],
    'margin': [100, 200, 300]
})

df1['Present'] = df1['key'].apply(lambda x: 'Yes' if x in df2['key1'].values or x in df2['key2'].values or x in df2['key3'].values else 'No')

df1['Margin'] = df1['key'].apply(
    lambda x: df2.loc[df2['key1'] == x, 'margin'].values[0] if x in df2['key1'].values else (
              df2.loc[df2['key2'] == x, 'margin'].values[0] if x in df2['key2'].values else (
              df2.loc[df2['key3'] == x, 'margin'].values[0] if x in df2['key3'].values else None
             ))
)

result = df1[['key', 'Present', 'Margin']]

import ace_tools as tools; tools.display_dataframe_to_user(name="Result", dataframe=result)

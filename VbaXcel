Sub ImportAndAnalyzeNifty50Data()
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets("Nifty50Data")
    
    ' Clear existing data
    ws.Cells.Clear
    
    ' Import CSV data
    With ws.QueryTables.Add(Connection:="TEXT;nifty_50_data.csv", Destination:=ws.Range("A1"))
        .TextFileParseType = xlDelimited
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = True
        .TextFilePlatform = xlWindows
        .Refresh BackgroundQuery:=False
    End With
    
    ' Calculate average closing price for each stock
    Dim lastRow As Long
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    
    Dim stockSymbols As Collection
    Set stockSymbols = New Collection
    
    Dim i As Long
    For i = 2 To lastRow
        On Error Resume Next
        stockSymbols.Add ws.Cells(i, 1).Value, CStr(ws.Cells(i, 1).Value)
        On Error GoTo 0
    Next i
    
    Dim stock As Variant
    Dim startRow As Long
    Dim endRow As Long
    Dim totalClose As Double
    Dim count As Long
    Dim avgClose As Double
    Dim outputRow As Long
    outputRow = 2
    
    ws.Cells(1, "G").Value = "Stock Symbol"
    ws.Cells(1, "H").Value = "Average Closing Price"
    
    For Each stock In stockSymbols
        startRow = Application.WorksheetFunction.Match(stock, ws.Columns("A"), 0)
        endRow = Application.WorksheetFunction.Match(stock & ".99999999999", ws.Columns("A"), 1) - 1
        
        totalClose = Application.WorksheetFunction.Sum(ws.Range("F" & startRow & ":F" & endRow))
        count = endRow - startRow + 1
        avgClose = totalClose / count
        
        ws.Cells(outputRow, "G").Value = stock
        ws.Cells(outputRow, "H").Value = avgClose
        
        outputRow = outputRow + 1
    Next stock
    
    MsgBox "Data import and analysis complete!", vbInformation
End Sub

import pandas as pd

def extract_data(flat_data, keywords, expected_columns):
    rows = []
    for kw in keywords:
        row = {"item": kw}
        for col in expected_columns:
            row[col] = None
        row["ignored"] = []
        for key, value in flat_data.items():
            tokens = key.split('.')
            for i, token in enumerate(tokens):
                if token == kw and i + 1 < len(tokens):
                    col_candidate = tokens[i + 1]
                    if col_candidate in expected_columns:
                        row[col_candidate] = value
                    else:
                        if col_candidate not in row["ignored"]:
                            row["ignored"].append(col_candidate)
        rows.append(row)
    return pd.DataFrame(rows)

flat_data = {
    "ABCSE.Box1000.value": "20",
    "ABCSE.Box1000.statement": "Active",
    "Other.Box1000.123": "ShouldBeIgnored",
    "Other.Box2000.value": "30",
    "Other.Box2000.status": "Inactive",
    "Misc.NotBox1000.something": "ignored"
}

keywords = ["Box1000", "Box2000"]
expected_columns = ["value", "statement", "status"]

df = extract_data(flat_data, keywords, expected_columns)
print(df)

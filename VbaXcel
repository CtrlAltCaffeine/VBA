import json
import re
import pandas as pd

data = {
  "portfolios": [
    {
      "entries": [
        {
          "positions": [
            {"netQty": 5},
            {
              "instrument": {
                "clearingOrganizationId": "XMAR",
                "exchangeId": "XOC",
                "periodCode": "IMM",
                "productCode": "20250207",
                "productType": "OOP",
                "putCallInd": "P",
                "strike": 218.0,
                "underlyingPeriodCode": "000000"
              }
            },
            {"netQty": -3},
            {
              "instrument": {
                "clearingOrganizationId": "XMAR",
                "exchangeId": "XOC",
                "periodCode": "IMM",
                "productCode": "20250208",
                "productType": "OOP",
                "putCallInd": "C",
                "strike": 220.0,
                "underlyingPeriodCode": "000000"
              }
            }
          ]
        }
      ]
    }
  ]
}

json_str = json.dumps(data)
pattern = re.compile(r'"netQty"\s*:\s*(-?\d+).*?"instrument"\s*:\s*\{(.*?)\}', re.DOTALL)
fields = [
    "clearingOrganizationId",
    "exchangeId",
    "periodCode",
    "productCode",
    "productType",
    "putCallInd",
    "strike",
    "underlyingPeriodCode"
]
rows = []
for match in pattern.finditer(json_str):
    net_qty = int(match.group(1))
    instr_str = match.group(2)
    row = {"netQty": net_qty}
    for f in fields:
        m2 = re.search(rf'"{f}"\s*:\s*(?:"([^"]+)"|(\d+(\.\d+)?))', instr_str)
        if m2:
            if m2.group(1) is not None:
                row[f] = m2.group(1)
            else:
                val = float(m2.group(2))
                row[f] = int(val) if val.is_integer() else val
        else:
            row[f] = None
    rows.append(row)

df = pd.DataFrame(rows)
print(df)
print(df.to_csv(index=False))

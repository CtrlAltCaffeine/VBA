function createChartAndSendEmail() {
  // Step 1: Create a new sheet for the chart
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var chartSheet = ss.getSheetByName('ChartSheet');
  if (!chartSheet) {
    chartSheet = ss.insertSheet('ChartSheet');
  } else {
    chartSheet.clear();
  }

  // Step 2: Get the data
  var data = getData();
  
  // Step 3: Add data to the new sheet
  var headers = ['Date', 'First Preference', 'Second Preference', 'Third Preference'];
  var chartData = processChartData(data);
  var rows = [];
  for (var date in chartData) {
    rows.push([date, chartData[date][0], chartData[date][1], chartData[date][2]]);
  }
  chartSheet.appendRow(headers);
  chartSheet.getRange(2, 1, rows.length, rows[0].length).setValues(rows);

  // Step 4: Create the chart
  var chart = chartSheet.newChart()
    .setChartType(Charts.ChartType.BAR)
    .addRange(chartSheet.getRange(1, 1, rows.length + 1, headers.length))
    .setPosition(1, 5, 0, 0)
    .asBarChart()
    .setStacked()
    .setOption('title', 'Preference Dates Distribution')
    .setOption('is3D', true)
    .build();
  
  chartSheet.insertChart(chart);

  // Step 5: Get the chart as an image
  var chartImageUrl = chart.getAs('image/png').getBlob().getDataAsString();

  // Step 6: Create the email content
  var emailAddress = 'recipient@example.com'; // Replace with the recipient's email address
  var subject = 'Survey Data Analysis Dashboard';
  var message = 'Please find the survey data analysis dashboard below:<br><br>';
  
  var chartBlob = UrlFetchApp.fetch(chartImageUrl).getBlob();
  var encodedChart = Utilities.base64Encode(chartBlob.getBytes());
  var imageUrl = 'data:image/png;base64,' + encodedChart;

  message += '<img src="' + imageUrl + '"><br><br>';
  var htmlContent = createHtmlContent();
  message += htmlContent;

  // Step 7: Send the email
  MailApp.sendEmail({
    to: emailAddress,
    subject: subject,
    htmlBody: message
  });

  // Optional: Clean up by deleting the temporary sheet
  // ss.deleteSheet(chartSheet);
}

function getData() {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  var dataRange = sheet.getDataRange();
  return dataRange.getValues();
}

function processChartData(data) {
  var chartData = {};
  for (var i = 1; i < data.length; i++) {
    var firstDate = data[i][2];
    var secondDate = data[i][3];
    var thirdDate = data[i][4];
    if (!chartData[firstDate]) chartData[firstDate] = [0, 0, 0];
    if (!chartData[secondDate]) chartData[secondDate] = [0, 0, 0];
    if (!chartData[thirdDate]) chartData[thirdDate] = [0, 0, 0];
    chartData[firstDate][0]++;
    chartData[secondDate][1]++;
    chartData[thirdDate][2]++;
  }
  return chartData;
}

function isValidValue(value) {
  if (!value) return false;
  value = value.toString().trim().toLowerCase();
  return value && value !== 'n/a' && value !== 'na' && value !== 'none';
}

function createHtmlContent() {
  var data = getData();
  
  var htmlContent = '';
  htmlContent += '<h2>Firm Comments</h2>';
  htmlContent += '<table border="1" cellpadding="5"><tr><th>Firm ID/Name</th><th>Comments</th></tr>';
  for (var i = 1; i < data.length; i++) {
    var comment = data[i][6];
    if (isValidValue(comment)) {
      htmlContent += '<tr><td>' + data[i][1] + '</td><td>' + comment + '</td></tr>';
    }
  }
  htmlContent += '</table>';

  htmlContent += '<h2>Technical Freeze Periods</h2>';
  htmlContent += '<table border="1" cellpadding="5"><tr><th>Firm ID/Name</th><th>Technical Freeze</th></tr>';
  for (var i = 1; i < data.length; i++) {
    var techFreeze = data[i][5];
    if (isValidValue(techFreeze)) {
      htmlContent += '<tr><td>' + data[i][1] + '</td><td>' + techFreeze + '</td></tr>';
    }
  }
  htmlContent += '</table>';

  return htmlContent;
}
